package com.bprise.orbit.migration.handler;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import com.bprise.orbit.migration.util.QueryStore;
import com.datastax.driver.core.BoundStatement;
import com.datastax.driver.core.PreparedStatement;
import com.datastax.driver.core.ResultSet;
import com.datastax.driver.core.Row;
import com.datastax.driver.core.Session;

import redis.clients.jedis.Jedis;

@Component
public class VendorsHandler implements Handler {

	@Override
	public void update(List<Long> ids, Session session, Jedis jedis) {
		ids.forEach(p -> {
			jedis.keys("vendor_" + p + "*").forEach(t -> {
				jedis.del(t);
			});
			;
		});
		PreparedStatement prepared = session.prepare(QueryStore.GET_VENDORS);
		BoundStatement bound = prepared.bind(ids);
		ResultSet rs = session.execute(bound);
		List<Row> rows = rs.all();
		for (Row row : rows) {
			createVendorRecord(row, jedis);
		}
	}
	
	private void createVendorRecord(Row row,Jedis jedis){
		Map<String,String> vendorDetails = new HashMap<String,String>();
		vendorDetails.put("name", row.getString("name"));
		vendorDetails.put("status", row.getString("status"));
		vendorDetails.put("vendor_site_url", row.getString("vendor_site_url"));
		vendorDetails.put("zonalname", row.getString("zonalname"));
		jedis.hmset("vendor_"+row.getLong("id"), vendorDetails);
		jedis.set("vendor_"+row.getLong("id")+":vendoruid_"+row.getString("vendor_uid"), "");
	}

}
